// Mixins //////////////////////////////////////////////////////////


// Text ------------------------------------------------------------

.font-size(@font-size: 16) {
  @rem: (@font-size / 10);
  font-size: (@font-size * 1px);
  font-size: ~"@{rem}rem";
}

.line-height(@line-height: 1.5) {
  line-height: (@line-height * @basefontsize);
  line-height: ~"@{line-height}rem";
}

.text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal) {
  @font-face {
    font-family: @family-name;
    src: url('@{font-path}.eot');
    src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
         url('@{font-path}.woff') format('woff'),
         url('@{font-path}.ttf') format('truetype'),
     url('@{font-path}.svg#@{family-name}') format('svg');
    font-weight: @font-weight;
    font-style: @font-style;
  }
}



// Gradients -------------------------------------------------------

.horizontal(@startColor: @white, @endColor: @lightergrey) {
background-color : @endColor;
//background-image : -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor));  // Safari 4+, Chrome 2+
background-image : -webkit-linear-gradient(left, @startColor, @endColor);                    // Safari 5.1+, Chrome 10+
background-image :    -moz-linear-gradient(left, @startColor, @endColor);                    // FF 3.6+
background-image :     -ms-linear-gradient(left, @startColor, @endColor);                    // IE10
background-image :      -o-linear-gradient(left, @startColor, @endColor);                    // Opera 11.10
background-image :         linear-gradient(left, @startColor, @endColor);                    // W3C
background-repeat: repeat-x;
}

.vertical(@startColor: @white, @endColor: @lightergrey) {
background-color : @endColor;
//background-image : -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor));  // Safari 4+, Chrome 2+
background-image : -webkit-linear-gradient(top, @startColor, @endColor);                     // Safari 5.1+, Chrome 10+
background-image :    -moz-linear-gradient(top, @startColor, @endColor);                     // FF 3.6+
background-image :     -ms-linear-gradient(top, @startColor, @endColor);                     // IE10
background-image :      -o-linear-gradient(top, @startColor, @endColor);                     // Opera 11.10
background-image :         linear-gradient(top, @startColor, @endColor);                     // W3C
background-repeat: repeat-x;
}

.directional(@startColor: @white, @endColor: @lightergrey, @deg : 45deg) {
background-color : @endColor;
background-image : -webkit-linear-gradient(@deg, @startColor, @endColor);  // Safari 5.1+, Chrome 10+
background-image :    -moz-linear-gradient(@deg, @startColor, @endColor);  // FF 3.6+
background-image :     -ms-linear-gradient(@deg, @startColor, @endColor);  // IE10
background-image :      -o-linear-gradient(@deg, @startColor, @endColor);  // Opera 11.10
background-image :         linear-gradient(@deg, @startColor, @endColor);  // W3C
background-repeat: repeat-x;
}



// General ---------------------------------------------------------

// .border-radius(VALUE);

.border-radius(@radius) {
-webkit-border-radius: @radius;
   -moz-border-radius: @radius;
        border-radius: @radius;
}


// .box-shadow(HORIZONTAL VERTICAL BLUR COLOR))

.box-shadow(@shadow) {
-webkit-box-shadow: @shadow;
   -moz-box-shadow: @shadow;
        box-shadow: @shadow;
}


// .inset-shadow(HORIZONTAL VERTICAL BLUR COLOR))

.inset-shadow(@shadow) {
-webkit-box-shadow: inset @shadow;
   -moz-box-shadow: inset @shadow;
        box-shadow: inset @shadow;
}


// .text-shadow(HORIZONTAL VERTICAL BLUR COLOR))

.text-shadow(@shadow) {
-webkit-text-shadow: @shadow;
   -moz-text-shadow: @shadow;
        text-shadow: @shadow;
}


// .opacity(VALUE);

.opacity(@opacity) {
-webkit-opacity: @opacity;
   -moz-opacity: @opacity;
        opacity: @opacity;
}


// .rotate(VALUEdeg);

.rotate(@deg) {
-webkit-transform: rotate(@deg);
   -moz-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
     -o-transform: rotate(@deg);
        transform: rotate(@deg);
}

// .rotateX(VALUEdeg);

.rotateX(@deg) {
-webkit-transform: rotateX(@deg);
   -moz-transform: rotateX(@deg);
    -ms-transform: rotateX(@deg);
     -o-transform: rotateX(@deg);
        transform: rotateX(@deg);
}

// .rotateY(VALUEdeg);

.rotateY(@deg) {
-webkit-transform: rotateY(@deg);
   -moz-transform: rotateY(@deg);
    -ms-transform: rotateY(@deg);
     -o-transform: rotateY(@deg);
        transform: rotateY(@deg);
}

// .rotateZ(VALUEdeg);

.rotateZ(@deg) {
-webkit-transform: rotateZ(@deg);
   -moz-transform: rotateZ(@deg);
    -ms-transform: rotateZ(@deg);
     -o-transform: rotateZ(@deg);
        transform: rotateZ(@deg);
}


// .scale(VALUE);

.scale(@ratio) {
-webkit-transform: scale(@ratio);
   -moz-transform: scale(@ratio);
    -ms-transform: scale(@ratio);
     -o-transform: scale(@ratio);
        transform: scale(@ratio);
}


// .skew(VALUE, VALUE);

.skew(@x, @y) {
-webkit-transform: skew(@x, @y);
   -moz-transform: skew(@x, @y);
    -ms-transform: skew(@x, @y);
     -o-transform: skew(@x, @y);
        transform: skew(@x, @y);
}


// .transition(PROPERTY DURATION DELAY(OPTIONAL) TIMING-FINCTION);

.transition(@transition: all ease 0.2s) {
-webkit-transition: @transition;
   -moz-transition: @transition;
    -ms-transition: @transition;
     -o-transition: @transition;
        transition: @transition;
}

// .transition-transform(DURATION DELAY(OPTIONAL) TIMING-FINCTION);

.transition-transform(@options: ease 0.2s) {
-webkit-transition:-webkit-transform @options;
   -moz-transition:   -moz-transform @options;
    -ms-transition:    -ms-transform @options;
     -o-transition:     -o-transform @options;
        //transition:        transform @options;
}


// .translate(VALUE, VALUE)

.translate(@x, @y) {
-webkit-transform: translate(@x, @y);
   -moz-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y);
     -o-transform: translate(@x, @y);
        transform: translate(@x, @y);
}


.translate3d(@x, @y, @z) {
-webkit-transform: translate3d(@x, @y, @z);
   -moz-transform: translate3d(@x, @y, @z);
    -ms-transform: translate3d(@x, @y, @z);
     -o-transform: translate3d(@x, @y, @z);
        transform: translate3d(@x, @y, @z);
}

.transform-origin(@value) {
-webkit-transform-origin: @value;
   -moz-transform-origin: @value;
    -ms-transform-origin: @value;
     -o-transform-origin: @value;
        //transform-origin: @value;
}





// Technical -------------------------------------------------------


// .appearance(VALUE)

.appearance(@value) {
-webkit-appearance: @value;
   -moz-appearance: @value;
        //appearance: @value; // Soon. Maybe.
}

// .backface-visibility(VALUE);

.backface-visibility(@value) {
-webkit-backface-visibility: @value;
   -moz-backface-visibility: @value;
        //backface-visibility: @value; // Soon. Maybe.
}

// .background-alpha(VALUE, VALUE);

.background-alpha(@color: @white, @alpha: 1) {
  background-color : hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
}


// .background-size(VALUE VALUE);

.background-size(@size) {
-webkit-background-size: @size;
   -moz-background-size: @size;
     -o-background-size: @size;
        background-size: @size;
}


// .background-clip(VALUE); (border-box, padding-box, content-box)

.background-clip(@clip) {
-webkit-background-clip: @clip;
   -moz-background-clip: @clip;
        background-clip: @clip;
}


// .box-sizing(VALUE); (border-box, padding-box, content-box)

.box-sizing(@boxsize) {
-webkit-box-sizing: @boxsize;
   -moz-box-sizing: @boxsize;
        box-sizing: @boxsize;
}


// .margin-x(VALUE)

.margin-x(@margin) {
  margin-left: @margin;
  margin-right: @margin;
}

// .margin-x(VALUE, VALUE)

.margin-x(@left, @right) {
  margin-left: @left;
  margin-right: @right;
}

// .margin-y(VALUE)

.margin-y(@margin) {
  margin-top: @margin;
  margin-bottom: @margin;
}

// .margin-y(VALUE, VALUE)

.margin-y(@top, @bottom) {
  margin-top: @top;
  margin-bottom: @bottom;
}

// .padding-x(VALUE)

.padding-x(@padding) {
  padding-left: @padding;
  padding-right: @padding;
}

// .padding-x(VALUE, VALUE)

.padding-x(@left, @right) {
  padding-left: @left;
  padding-right: @right;
}

// .padding-y(VALUE)

.padding-y(@padding) {
  padding-top: @padding;
  padding-bottom: @padding;
}

// .padding-y(VALUE, VALUE)

.padding-y(@top, @bottom) {
  padding-top: @top;
  padding-bottom: @bottom;
}


// Helpers ---------------------------------------------------------

// Chrome Frame

.chromeframe {
  margin: .2em 0;
  background: @lightgrey;
  color: @black;
  padding: .2em 0;
}


// Clearfix

.clearfix {
  *zoom: 1;
  
  &:before,
  &:after {
    display: table;
    line-height: 0;
    content: "";
  }
  &:after {
    clear: both;
  }
}


// Image Replacement

.hide-text {
  text-indent: -200%;
  white-space: nowrap;
  overflow: hidden;
}


// Hide from visual and speaking browsers

.hidden {
  display: none !important;
  visibility: hidden;
}


// Hide but maintain layout

.invisible {
  visibility: hidden;
}


// .resize(VALUE) (none, both, horizontal, vertical, inherit)

.resize(@direction: both) {
  resize: @direction;
  overflow: auto;
}


// .userselect(VALUE) (all, element, none, text)

.user-select(@select) {
-webkit-user-select: @select;
   -moz-user-select: @select;
     -o-user-select: @select;
        user-select: @select;
}


// Hidden but available to speaking browsers

.visuallyhidden {
  overflow: hidden;
  position: absolute;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  
  // Make visuallyhidden focusable with a keyboard
  
  &.focusable:active,
  &.focusable:focus {
    position: static;
    clip: auto;
    height: auto;
    width: auto;
    margin: 0;
    overflow: visible;
  }
}



// Cool Stuff ------------------------------------------------------

// .arrow(DIRECTION, SIZE, COLOUR, DISPLAY)

.arrow(@_, @size, @color, @display: block) {
  content: ''; // usually a psuedo
  display: @display;
  width: 0;
	height: 0;
	border: @size solid transparent;
}

.arrow(left, @size, @color) {
	border-right-color: @color;
}

.arrow(up, @size, @color) {
	border-bottom-color: @color;
}

.arrow(right, @size, @color) {
	border-left-color: @color;
}

.arrow(down, @size, @color) {
	border-top-color: @color;
}